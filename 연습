import java.util.ArrayList;
import java.util.Scanner;

pubilc class Study {

static class User {
String name;
String date;
Stirng sex;
String phonenumber;
String email;
String id;
Stirng pw;

User (String name , String date , String sex , String phonenumber , String email , String id , String pw) {
this.name = name;
this.date = date;
this.sex = sex;
this.phonenumber = phonenumber ;
this.email = email;
this.id = id;
this.pw = pw;
}
}

pubilc static void main(String[] args) {
ArrayList <User> users = new ArrayList<>();
Scanner sc = new Scanner(System.in);

boolean running = true;

while(running) {

System.out.println("\n===== 메뉴 =====");
System.out.println("1. 회원가입");
System.out.println("2. 아이디 찾기");
System.out.println("3. 비밀번호 찾기");
System.out.println("4. 회원정보 확인");
System.out.println("5. 프로그램 종료");
System.out.println("\n메뉴선택:");

String input = sc.nextLine();

switch(input) {

case "1" : { 

String name = readName(sc ,"이름을 입력하세요:");
String date = readDate(sc , "생년월일을 입력하세요:");
String sex = readSex (sc , "성별을 입력하세요(남/여):");
String phonenumber = readphoneNumbet(sc ,"전화번호를 입력하세요:", users );
String email = readEmail (sc, "이메일을 입력하세요:" , users );
String id = reaeId ( sc , "아이디를 입력하세요:" , users );
String pw = ( sc , "비밀번호를 입력하세요:");

users.add(new User(name , date , sex , phonenubmer , email , id , pw));
System.out.println("회원가입이 완료되었습니다.");

break;
}
case "2" : { 
idFind(users);

break;
}                            

case "3" : {
pwFind(users);

break;
}

case "4" : {
userList(users);

break;
}

case "5" : {
System.out.println("프로그램을 종료합니다.");

running = false;
break;
}
defualt : ("잘못된 선택입니다. 1~5중에 골라주세요.");
}
}
sc.close();
}

// 매소드 기능 부분


//이름
private static void readName(Scanner sc , prompot ) {

while(true) {
System.out.println(prompot);
String name = sc.nextLine().trim();

if(name.isEmpty()) {
System.out.println("이름을 입력해주세요.");
continue;
}
if(!name.matches("[가-힣]+")) {
System.out.println("이름에는 한글만 적을 수 있습니다.");
continue;
}
}
return name;
}
//생년월일
private static void readDate(Scanner sc , prompot ) {

while(true) {
System.out.println(prompot);
String date = sc.nextLine().trim();

if(date.isEmpty()) {
System.out.println("생년월일을 입력해주세요.");
continue;
}
if(!date.matches("[0-9]+"=)) {
System.out.println("생년월일은 숫자만 적을 수 있습니다.");
continue;
}
}
return date;
}
//성별
private static void readSex(Scanner sc , prompot ) {

while(true) {
System.out.println(prompot);
String sex = sc.nextLine().trim();

if(sex.isEmpty()) {
System.out.println("성별을 입력해주세요.");
continue;
}
if(!sex.equals(남) && !sex.equals(여)) {
System.out.println("(남/여)중에 골라주세요");
continue;
}
}
return sex;
}
//전화번호 중복확인
private static boolean existsPhonenumber(ArrayList<User> users, String phonenumber) {
		    for (User u : users) {
		        if (phonenumber.equals(u.phonenumber)) return true;
		    }
		    return false;
		}



//전화번호
private static void readPhonenumber(Scanner sc , prompot , ArrayList <User> users ) {

while(true) {
System.out.println(prompot);
String phonenumber = sc.nextLine().trim();

if(phonenumber.isEmpty()) {
System.out.println("전화번호를 입력해주세요.");
continue;
}
if(!phonenumber.matches("[0-9]+")) {
System.out.println("전화번호는 숫자만 적을 수 있습니다.");
continue;
}
if(phonenumber.length() != 11) {
System.out.println("전화번호는 11자리여야 합니다.(-제외)");
continue; 
}
if(existsPhonenumber( users , phonenumber)) {
System.out.println("이미 등록이 되어있는 전화번호 입니다.");
continue;
}
}
return phonenumber;
}
//이메일 중복확인
private static boolean existsEmail(ArrayList<User> users, String email) {
		    for (User u : users) {
		        if (email.equals(u.email)) return true;
		    }
		    return false;
		}
// 이메일
private static void readEmail(Scanner sc , prompot , ArrayList <User> users ) {

while(true) {
System.out.println(prompot);
String email = sc.nextLine().trim();

if(email.isEmpty()) {
System.out.println("이메일을 입력해주세요.");
continue;
}
if(!email.matches("[a-zA-Z0-9@]+")) {
System.out.println("이메일을 다시 확인해주세요.");
continue;
}

if(existsEmail( users , email)) {
System.out.println("이미 등록이 되어있는 이메일입니다.");
continue;
}
}
return email;
}
//아이디 중복 확인
private static boolean existsId(ArrayList<User> users, String id) {
		    for (User u : users) {
		        if (id.equals(u.id)) return true;
		    }
		    return false;
		}
//아이디
private static void readId(Scanner sc , prompot , ArrayList <User> users ) {

while(true) {
System.out.println(prompot);
String id = sc.nextLine().trim();

if(id.isEmpty()) {
System.out.println("아이디를 입력해주세요.");
continue;
}
if(!id.matches("[a-zA-Z0-9]+")) {
System.out.println("아이디는 영문,숫자만 사용가능 합니다.");
continue;
}
if(id.length() < 7 || id.length() > 17 ) {
System.out.println("아이디는 8~16글자 사이여야 합니다") 
continue;
}
if(existsEmail( users , id)) {
System.out.println("이미 사용중인 아이디입니다.");
continue;
}
}
return id;
}
//비밀번호
private static void readPw(Scanner sc , prompot ,  ) {

while(true) {
System.out.println(prompot);
String pw = sc.nextLine().trim();

if(pw.isEmpty()) {
System.out.println("비밀번호를 입력해주세요.");
continue;
}
if(!pw.matches("[a-zA-Z0-9!@]+")) {
System.out.println("비밀번호는 영문,숫자,특수문자(!,@)만 사용가능 합니다.");
continue;
}
if(id.length() < 7 || id.length() > 17 ) {
System.out.println("비밀번호는 8~16글자 사이여야 합니다") 
continue;
}
}
return id;
}

// 아이디 찾기

private static void idFind( ArrayList <User> users , Scanner sc ) {

for( User u : usesrs ) {
if(u.name(u.name))





























